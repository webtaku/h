{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["type CustomTag = `${string}-${string}`;\ntype Tag = '' | keyof HTMLElementTagNameMap | CustomTag;\n\ntype Selector =\n  | Tag\n  | `${Tag}#${string}`\n  | `${Tag}.${string}`\n  | `${Tag}#${string}.${string}`;\n\ntype ElementByTag<T extends Tag | string> = (\n  T extends '' ? HTMLDivElement\n  : (\n    T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T]\n    : HTMLElement\n  )\n);\n\ntype ElementBySelector<S extends Selector> = (\n  S extends '' ? HTMLDivElement\n  : (\n    S extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[S]\n    : (\n      S extends `${infer T}#${string}` ? ElementByTag<T>\n      : (\n        S extends `${infer T}.${string}` ? ElementByTag<T>\n        : HTMLElement\n      )\n    )\n  )\n);\n\n// data-*, aria-* typed support\ntype DataAttributes = { [K in `data-${string}`]?: string | number | boolean | null | undefined };\ntype AriaAttributes = { [K in `aria-${string}`]?: string | number | boolean | null | undefined };\n\ntype ElementProps<S extends Selector> =\n  & Partial<Omit<ElementBySelector<S>, 'style'>>\n  & {\n    // allow object OR raw cssText string\n    style?: Partial<CSSStyleDeclaration> | string;\n    class?: string;\n    dataset?: Record<string, string | number | boolean | null | undefined>;\n    role?: string;\n  }\n  & DataAttributes\n  & AriaAttributes;\n\nconst toKebab = (s: string) => s.replace(/([A-Z])/g, '-$1').toLowerCase();\nconst toAttrVal = (v: unknown) =>\n  v === true ? 'true' : v === false ? 'false' : v == null ? '' : String(v);\n\nconst normalizeCssText = (css: string) =>\n  css.replace(/^\\s*;+/g, '').replace(/;+\\s*$/g, '').trim(); // trim leading/trailing semicolons\n\nfunction h<S extends Selector>(\n  selector: S = '' as S,\n  ...args: (string | ElementProps<S> | null | undefined)[]\n): string {\n  const parts = selector.split(/([#.])/);\n  const tag = parts[0] || 'div';\n\n  let id = '';\n  const classes: string[] = [];\n  const attrs: Record<string, string> = {};\n\n  // We'll collect styles from both object and string inputs and then join.\n  const styleObjectParts: string[] = []; // from style object\n  const styleStringParts: string[] = []; // from style string\n\n  // parse #id and .class from selector\n  for (let i = 1; i < parts.length; i += 2) {\n    const type = parts[i] as '#' | '.';\n    const value = parts[i + 1];\n    if (!value) continue;\n    if (type === '#') id = value;\n    else if (type === '.') {\n      classes.push(...value.split(/\\s+/).filter(Boolean));\n    }\n  }\n\n  const innerHTML: string[] = [];\n\n  for (const arg of args) {\n    if (typeof arg === 'string') {\n      // NOTE: treated as raw HTML by design\n      innerHTML.push(arg);\n      continue;\n    }\n    if (!arg) continue;\n\n    const props = arg as ElementProps<S>;\n    for (const [key, value] of Object.entries(props)) {\n      if (value == null) continue;\n\n      if (key === 'style') {\n        if (typeof value === 'string') {\n          const css = normalizeCssText(value);\n          if (css) styleStringParts.push(css);\n        } else if (typeof value === 'object') {\n          for (const [k, v] of Object.entries(value as Partial<CSSStyleDeclaration>)) {\n            if (v == null) continue;\n            const cssKey = k.startsWith('--') ? k : toKebab(k);\n            styleObjectParts.push(`${cssKey}: ${v}`);\n          }\n        }\n        continue;\n      }\n\n      if (key === 'dataset' && typeof value === 'object') {\n        for (const [dKey, dVal] of Object.entries(value)) {\n          if (dVal == null) continue;\n          const kebab = toKebab(dKey);\n          attrs[`data-${kebab}`] = toAttrVal(dVal);\n        }\n        continue;\n      }\n\n      if (key === 'id') {\n        id = String(value);\n        continue;\n      }\n\n      if (key === 'class' || key === 'className') {\n        const classNames = String(value).split(/\\s+/);\n        for (const className of classNames) {\n          if (className) classes.push(className);\n        }\n        continue;\n      }\n\n      if (key.startsWith('data-')) {\n        attrs[key] = toAttrVal(value);\n        continue;\n      }\n\n      if (key.startsWith('aria-')) {\n        attrs[key] = toAttrVal(value);\n        continue;\n      }\n\n      if (typeof value === 'function') {\n        console.warn(`Skipping function prop \"${key}\" â€” cannot serialize functions in HTML string.`);\n        continue;\n      }\n\n      // generic attribute\n      attrs[key] = toAttrVal(value);\n    }\n  }\n\n  let attrString = '';\n  if (id) attrString += ` id=\"${id}\"`;\n  if (classes.length) attrString += ` class=\"${classes.join(' ')}\"`;\n\n  // Merge style object + style strings\n  if (styleObjectParts.length || styleStringParts.length) {\n    const styleCombined = [...styleObjectParts, ...styleStringParts].join('; ');\n    if (styleCombined) attrString += ` style=\"${styleCombined}\"`;\n  }\n\n  for (const [k, v] of Object.entries(attrs)) {\n    if (k === 'id' || k === 'class' || k === 'style') continue; // already handled\n    attrString += ` ${k}=\"${v}\"`;\n  }\n\n  return `<${tag}${attrString}>${innerHTML.join('')}</${tag}>`;\n}\n\nexport { h };\n"]}